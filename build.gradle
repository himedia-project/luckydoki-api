// QueryDSL 버전정보 추가
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.himedia'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // dotenv
    implementation 'io.github.cdimascio:java-dotenv:5.1.1'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // aws s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // thumbnailator(gif,webp 지원 x)
    implementation 'net.coobird:thumbnailator:0.4.19'

    // Apache POI
    implementation 'org.apache.poi:poi:4.1.2'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'

    // Jakarta XML Binding
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.0'

    // Jakarta Activation (필요한 경우)
    implementation 'jakarta.activation:jakarta.activation-api:2.1.0'

    // WebP 지원을 위한 의존성 추가
    implementation 'org.sejda.imageio:webp-imageio:0.1.6'

    // selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.25.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

// === ⭐ QueryDSL 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// clean 태스크 실행 시 생성된 Q클래스 삭제 (사용 중인 경우)
clean {
    delete file(querydslDir)
}


// plain - jar 생략
jar {
    enabled = false
}

// bootJar - 중복 제거
tasks.named('bootJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// bootWar - 중복 제거
tasks.named('jar') {
    enabled = false
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// JAXB 의존성 중복 해결을 위한 설정
configurations.all {
    resolutionStrategy {
        // JAXB 버전 충돌 해결
        force 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
        force 'com.sun.xml.bind:jaxb-impl:4.0.0'
    }
}
