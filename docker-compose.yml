#version: '3.8'
services:
  db:
    image: mysql:8
    container_name: mysql_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - "3308:3306"
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: chatdb
    restart: always
    env_file:
      - .env
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
    #       초기화 스크립트가 필요한 경우 주석 해제
    #       - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command:
      - --auth
    networks:
      - app-network

  redis:
    image: redis:7.0
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false    # 개발 환경에서는 보안 비활성화
    ulimits:
      memlock:
        soft: -1
        hard: -1
#    volumes:
#      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network
    # nori 플러그인 설치를 위한 command 추가
    command: >
      bash -c '
        if [ ! -f /usr/share/elasticsearch/config/nori_installed ]; then
          bin/elasticsearch-plugin install -b analysis-nori &&
          touch /usr/share/elasticsearch/config/nori_installed;
        fi;
        exec /usr/local/bin/docker-entrypoint.sh elasticsearch
      '

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: